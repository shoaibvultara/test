name: Change Detection

on:
  repository_dispatch:
    types:
      - jira_issue_transition

jobs:
  process-jira-event:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: List Branches and Set Outputs
        id: list-branches
        run: |
          git fetch --all --prune
          git branch -a
          branches=$(git branch -a)
          if echo "${branches}" | grep -q "${{ github.event.client_payload.issueKey }}"; then
            echo "${{ github.event.client_payload.issueKey }} branch exists."
            echo "TARGET_BRANCH=exists" >> $GITHUB_ENV
          else
            echo "Branch ${{ github.event.client_payload.issueKey }} does not exist. Skipping subsequent steps."
            echo "TARGET_BRANCH=not_exists" >> $GITHUB_ENV
            exit 0
          fi

      - name: List modified files
        id: list-files
        run: |
          DIR_TO_CHECK=server/database
          changed_files_database=$(git diff --name-only main..${{ github.event.client_payload.issueKey }} -- $DIR_TO_CHECK)
          if [[ -n "$changed_files_database" ]]; then
            echo "Changes detected in server/database directory:"
            echo "$changed_files_database" > changed_database_files.txt
            echo "List of changed files saved to changed_database_files.txt"
          else
            echo "No changes detected in server/database directory."
          fi

          DIR_TO_CHECK=server/models
          changed_models_files=$(git diff --name-only main..${{ github.event.client_payload.issueKey }} -- $DIR_TO_CHECK)
          if [[ -n "$changed_model_files" ]]; then
            echo "Changes detected in server/database directory:"
            echo "$changed_models_files" > changed_models_files.txt
            echo "List of changed files saved to changed_database_files.txt"
          else
            echo "No changes detected in server/database directory."
          fi
      

      - name: Update JIRA Custom Field
        if: env.CHANGED_DATABASE_FILES != '' || env.CHANGED_MODELS_FILES != '' && env.TARGET_BRANCH == 'exists'
        run: |
          # Extract issueKey from the payload
          issueKey=${{ github.event.client_payload.issueKey }}
          # Your JIRA API URL
          jiraUrl="https://gittest.atlassian.net/rest/api/3/issue/${issueKey}"
          # Your JIRA Custom Field IDs
          customFieldIdAPI="customfield_10044"
          customFieldIdSchema="customfield_10045"
          # JIRA username (email)
          jiraUsername="shoaib40ce@gmail.com"
          # JIRA API token or password
          jiraToken=${{ secrets.JIRA_API_TOKEN }}
          
          # Check if there are changes in /server/database
          if grep -qE 'server/database/' changed_database_files.txt; then
            # Update custom field for API change
            curl -X PUT \
              -H "Content-Type: application/json" \
              -u "${jiraUsername}:${jiraToken}" \
              -d "{\"fields\": {\"${customFieldIdAPI}\": \"TRUE\"}}" \
              "${jiraUrl}"
          fi
          
          # Check if there are changes in /server/models or ItemDefinition.ts
          if grep -qE 'server/models/|src/threatmodel/ItemDefinition.ts' changed_models_files.txt; then
            # Update custom field for schema change
            curl -X PUT \
              -H "Content-Type: application/json" \
              -u "${jiraUsername}:${jiraToken}" \
              -d "{\"fields\": {\"${customFieldIdSchema}\": \"TRUE\"}}" \
              "${jiraUrl}"
          fi

name: Code Changes and Change Requests

on:
  pull_request_review:
    types: [submitted]

jobs:
  process-jira-event:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        
      - name: Count Changes
        id: list-files
        run: |
         issueKey="${{ github.event.pull_request.head.ref }}"
          PR_NUMBER=$(curl -s "https://api.github.com/repos/${{ github.repository }}/pulls" | jq ".[] | select(.head.ref == \"$issueKey\") | .number")
          echo "Extracted PR number: $PR_NUMBER"
          
          if [ -z "$PR_NUMBER" ]; then
            echo "PR_NUMBER not found. Skipping the remaining jobs."
            exit 0
          fi
          # Get PR Additions using GraphQL
          echo "Querying GitHub GraphQL API for PR details..."
          RESPONSE=$(curl -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -d '{"query":"query { repository(owner: \"${{ github.repository_owner }}\", name: \"${{ github.event.repository.name }}\") { pullRequest(number: '$PR_NUMBER') { additions changedFiles } } }"}' \
            https://api.github.com/graphql)
          echo "API Response:"
          echo "$RESPONSE"
          # Extract additions
          code_changes=$(echo "$RESPONSE" | jq -r '.data.repository.pullRequest.additions')
          echo "Number of additions in PR: $code_changes"
          echo "Code Changes: $code_changes"

          # Get PR details using GraphQL
          echo "Querying GitHub GraphQL API for PR details..."
          RESPONSE=$(curl -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -d '{"query":"query { repository(owner: \"${{ github.repository_owner }}\", name: \"${{ github.event.repository.name }}\") { pullRequest(number: '$PR_NUMBER') { reviews(first:100) { nodes { state } } } } }"}' \
            https://api.github.com/graphql)

          echo "API Response:"
          echo "$RESPONSE"

          # Extract reviews and filter out CHANGES_REQUESTED state
          changes_requested_reviews=$(echo "$RESPONSE" | jq -r '.data.repository.pullRequest.reviews.nodes | map(select(.state == "CHANGES_REQUESTED")) | length')

          echo "Number of changes requested: $changes_requested_reviews"

      - name: Update JIRA Custom Fields
        run: |
          jiraUsername="shoaib40ce@gmail.com"
          jiraToken="${{ secrets.JIRA_API_TOKEN }}"
          issueKey="${{ github.event.pull_request.head.ref }}"
          
          

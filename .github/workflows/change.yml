name: Code Changes and Change Requests

on:
  pull_request_review:
    types: [submitted]

jobs:
  process-jira-event:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        
      - name: Count Changes
        id: get-details
        run: |
          issueKey="${{ github.event.pull_request.head.ref }}"
          PR_NUMBER=$(curl -s "https://api.github.com/repos/${{ github.repository }}/pulls" | jq ".[] | select(.head.ref == \"$issueKey\") | .number")
          echo "Extracted PR number: $PR_NUMBER"
          
          if [ -z "$PR_NUMBER" ]; then
            echo "PR_NUMBER not found. Skipping the remaining jobs."
            exit 0
          fi
          # Get PR Additions using GraphQL
          echo "Querying GitHub GraphQL API for PR details..."
          RESPONSE=$(curl -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -d '{"query":"query { repository(owner: \"${{ github.repository_owner }}\", name: \"${{ github.event.repository.name }}\") { pullRequest(number: '$PR_NUMBER') { additions changedFiles } } }"}' \
            https://api.github.com/graphql)
          echo "API Response:"
          echo "$RESPONSE"
          # Extract additions
          code_changes=$(echo "$RESPONSE" | jq -r '.data.repository.pullRequest.additions')
          echo "Number of additions in PR: $code_changes"
          echo "Code Changes: $code_changes"
          echo "code_addition=$code_changes" >> $GITHUB_ENV
          
          # Get PR details using GraphQL
          echo "Querying GitHub GraphQL API for PR details..."
          RESPONSE=$(curl -X POST \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -d '{"query":"query { repository(owner: \"${{ github.repository_owner }}\", name: \"${{ github.event.repository.name }}\") { pullRequest(number: '$PR_NUMBER') { reviews(first:100) { nodes { state } } } } }"}' \
            https://api.github.com/graphql)
          echo "API Response:"
          echo "$RESPONSE"
          # Extract reviews and filter out CHANGES_REQUESTED state
          changes_requested_reviews=$(echo "$RESPONSE" | jq -r '.data.repository.pullRequest.reviews.nodes | map(select(.state == "CHANGES_REQUESTED")) | length')
          echo "Number of changes requested: $changes_requested_reviews"
          echo "changes_requested_reviews=$changes_requested_reviews" >> $GITHUB_ENV
          
      - name: count total changes
        #if: steps.get-details.outputs.code_changes > 0 || steps.get-details.outputs.changes_requested_reviews > 0
        run: |
          echo "Code Changes: $code_addition"
          # Make HTTP request to Jira API to fetch custom field value
          custom_field_value=$(curl -s -X GET -u shoaib40ce@gmail.com:${{ secrets.JIRA_API_TOKEN }} "https://gittest.atlassian.net/rest/api/latest/issue/${{ github.event.pull_request.head.ref }}?fields=customfield_10050" | jq -r '.fields.customfield_10050')
          echo "Existing changes: $custom_field_value"
          echo "existing_changes=$custom_field_value" >> $GITHUB_ENV
          echo "Total Changes= $((code_addition + custom_field_value))"
          echo "total_changes= $((code_addition + custom_field_value))" >> $GITHUB_ENV
          
      - name: Update JIRA Custom Fields
        #if: steps.get-details.outputs.code_changes > 0 || steps.get-details.outputs.changes_requested_reviews > 0
        run: |
          jiraUsername="shoaib40ce@gmail.com"
          jiraToken="${{ secrets.JIRA_API_TOKEN }}"
          issueKey="${{ github.event.pull_request.head.ref }}"
          code_changes="${{ env.code_changes }}"
          change_requests_reviews="${{ env.changes_requested_reviews }}"
          
          # Update customfield_10050
          curl -X PUT \
              -H "Content-Type: application/json" \
              -u "$jiraUsername:$jiraToken" \
              -d '{
                "fields": {
                  "customfield_10050": "'"$code_addition"'"
                }
              }' \
              "https://gittest.atlassian.net/rest/api/3/issue/${issueKey}"
          # Update customfield_10050
          curl -X PUT \
              -H "Content-Type: application/json" \
              -u "$jiraUsername:$jiraToken" \
              -d '{
                "fields": {
                  "customfield_10051": "'"$change_requests_reviews"'"
                }
              }' \
              "https://gittest.atlassian.net/rest/api/3/issue/${issueKey}"

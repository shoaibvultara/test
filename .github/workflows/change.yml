name: Code Changes and Change Requests

on:
  pull_request_review:
    types: [submitted]

jobs:
  process-jira-event:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        
      - name: Count Changes
        id: list-files
        run: |
          issueKey="${{ github.event.pull_request.head.ref }}"
          PR_NUMBER=$(curl -s -X GET \
                        -H "Authorization: token ${{ secrets.TOKEN_GITHUB }}" \
                        https://api.github.com/repos/${{ github.repository }}/pulls | jq ".[] | select(.head.ref == \"$issueKey\") | .number")
          echo "Extracted PR number: $PR_NUMBER"
          
          if [ -z "$PR_NUMBER" ]; then
            echo "PR_NUMBER not found. Skipping the remaining jobs."
            exit 0
          fi
          
          diff_url="https://api.github.com/repos/${{ github.repository }}/pulls/${PR_NUMBER}/"
          
          # Handle potential null response for reviews
          reviews_response=$(curl -s "${diff_url}reviews")
          if [ "$reviews_response" = "null" ]; then
            change_requests=0
          else
            change_requests=$(echo "$reviews_response" | jq -n '[inputs] | map(select(.state == "CHANGES_REQUESTED")) | length')
          fi
          echo "Change Requests: $change_requests"
          
          # Handle potential null response for files
          files_response=$(curl -s "${diff_url}files")
          if [ "$files_response" = "null" ]; then
            code_changes=0
          else
            code_changes=$(echo "$files_response" | jq -n '[inputs] | map(.additions) | add')
          fi
          echo "Code Changes: $code_changes"
          echo "::set-output name=change_requests::$change_requests"
          echo "::set-output name=code_changes::$code_changes"
      
      - name: Update JIRA Custom Fields
        if: steps.list-files.outputs.change_requests > 0 || steps.list-files.outputs.code_changes > 0
        run: |
          jiraUsername="shoaib40ce@gmail.com"
          jiraToken="${{ secrets.JIRA_API_TOKEN }}"
          issueKey="${{ github.event.pull_request.head.ref }}"
          
          if [ -n "${{ steps.list-files.outputs.change_requests }}" ]; then
            curl -X PUT \
              -H "Content-Type: application/json" \
              -u "$jiraUsername:$jiraToken" \
              -d '{
                "fields": {
                  "customfield_1051": '${{ steps.list-files.outputs.change_requests }}'
                }
              }' \
              "https://gittest.atlassian.net/rest/api/3/issue/${issueKey}"
          fi
          
          if [ -n "${{ steps.list-files.outputs.code_changes }}" ]; then
            curl -X PUT \
              -H "Content-Type: application/json" \
              -u "$jiraUsername:$jiraToken" \
              -d '{
                "fields": {
                  "customfield_1050": '${{ steps.list-files.outputs.code_changes }}'
                }
              }' \
              "https://gittest.atlassian.net/rest/api/3/issue/${issueKey}"
          fi
